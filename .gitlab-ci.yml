stages:
  - check
  - test
  - build

default:
  image: python:3.9
  before_script:
    - pip install poetry==1.4.0
    - poetry config --local cache-dir $PWD/.poetry/cache
    - poetry config --local virtualenvs.in-project true
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .poetry
      - .venv

check-linters:
  stage: check
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH =~ /ci$/
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master'
  script:
    - poetry install
    - echo "Checking with Flake8"
    - poetry run flake8 yastyleguide
    - echo "Checking with MyPy"
    - poetry run mypy yastyleguide


tests:
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH =~ /ci$/
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master'
  script:
    - poetry install
    - echo "Run tests"
    - poetry run pytest .


build-release:
  image: python:3.8
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH =~ /ci$/
  script:
    - echo "Building to python package."
    - poetry build
    - echo "Publish package to public pypi."
    - poetry config pypi-token.pypi $PYPI_TOKEN_PYPI
    - poetry publish
    - echo "Publish package to gitlab pypi."
    - poetry config repositories.gitlab "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/packages/pypi"
    - poetry config http-basic.gitlab gitlab-ci-token "$CI_JOB_TOKEN"
    - poetry publish --repository gitlab
  artifacts:
    expire_in: never
    paths:
      - $CI_PROJECT_DIR/dist
